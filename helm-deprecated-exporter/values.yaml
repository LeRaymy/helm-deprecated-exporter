# Default values for helm.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

replicaCount: 1

image:
  repository: ghcr.io/leraymy/helm-deprecated-exporter
  pullPolicy: IfNotPresent
  # Overrides the image tag whose default is the chart appVersion.
  tag: "v0.2.0"

imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

serviceAccount:
  # Specifies whether a service account should be created
  create: false
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

podAnnotations: {}

podSecurityContext: {}
  # fsGroup: 2000

securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

cronjob:
  # Whether to launch a job at deployment, to populate the configmap
  trigger: true
  image:
    repository: ghcr.io/leraymy/helm-deprecated-exporter-conf
    pullPolicy: IfNotPresent
    # Overrides the image tag whose default is the chart appVersion.
    tag: "v0.2.0"
  schedule: "12 12 * * *"
  restartPolicy: OnFailure

service:
  type: ClusterIP
  port: 8000

secret:
  kubeconfig: <base64 encoded kubeconfig>
resources:
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi
  requests:
    memory: "64Mi"
    cpu: "250m"

autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 100
  targetCPUUtilizationPercentage: 80
  # targetMemoryUtilizationPercentage: 80

nodeSelector: {}

tolerations: []

affinity: {}

## Create prometheus serviceMonitor to scrape harbor metrics.
## This requires the monitoring.coreos.com/v1 CRD. Please see
## https://github.com/prometheus-operator/prometheus-operator/blob/master/Documentation/user-guides/getting-started.md
##
serviceMonitor:
  enabled: true
  additionalLabels: {}
  # Scrape interval. If not set, the Prometheus default scrape interval is used.
  interval: ""
  scrapeTimeout: 30s
  # Metric relabel configs to apply to samples before ingestion.
  metricRelabelings:
    []
  relabelings:
    []
  # Namespace where we want to deploy the ServiceMonitor
  namespace: "monitoring-system"
prometheusRule:
  # Namespace where we want to deploy the PrometheusRule
  namespace: "monitoring-system"
  enabled: true
